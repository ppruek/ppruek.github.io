{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["TabContainer","props","react_default","a","createElement","Typography_default","component","style","padding","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeCat","event","value","setState","valueCat","handleChangeGDP","valueGDP","handleChangeRevenue","valueRev","handleChangeCountryGDP","countryGDP","handleChangeCountryRev","countryRev","state","className","id","display","justifyContent","alignItems","width","position","top","AppBar_default","color","Tabs_default","onChange","indicatorColor","textColor","variant","scrollButtons","Tab_default","label","margin","Card_default","CardHeader_default","title","subheader","class","index_esm","height","chartType","data","options","region","resolution","colorAxis","colors","backgroundColor","datalessRegionColor","defaultColor","mapsApiKey","rootProps","data-testid","loader","hAxis","gridlines","count","vAxis","series","1","curveType","explorer","actions","trendlines","0","type","visibleInLegend","chart","subtitle","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5b9407b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Chart from 'react-google-charts';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './App.css';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueCat: 0,\r\n      valueGDP: 0, \r\n      valueRev: 0,\r\n      countryGDP: 0,\r\n      countryRev: 0,\r\n    };\r\n  }\r\n\r\n  handleChangeCat = (event, value) => {\r\n    this.setState({ valueCat: value});\r\n  };\r\n\r\n  handleChangeGDP = (event, value) => {\r\n    this.setState({ valueGDP: value });\r\n  };\r\n\r\n  handleChangeRevenue = (event, value) => {\r\n    this.setState({ valueRev: value });\r\n  };\r\n\r\n  handleChangeCountryGDP = (event, value) => {\r\n    this.setState({ countryGDP: value });\r\n  };\r\n\r\n  handleChangeCountryRev = (event, value) => {\r\n    this.setState({ countryRev: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\" id=\"grad\" style={{display: 'flex', justifyContent: 'space-around', alignItems: 'center'}}>\r\n        <div style={{width: '80%', position: 'fixed', top: '90px'}}>\r\n          <div style={{width: '80%', position: 'fixed', top: '5px'}}>\r\n            <b id=\"myHead\">Ministry of Agriculture and Cooperatives</b>\r\n          </div>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={this.state.valueCat}\r\n              onChange={this.handleChangeCat}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n            >\r\n              <Tab label=\"General\" style={{width: '25%', margin: 'auto'}}/>\r\n              <Tab label=\"Overview Budget\" style={{width: '25%', margin: 'auto'}}/> {/* Time series */}\r\n              <Tab label=\"Budget Distribution\" style={{width: '25%', margin: 'auto'}}/> { /* Pie */}\r\n              <Tab label=\"Budget Allocation\" style={{width: '25%', margin: 'auto'}}/> {/* Bar */}\r\n            </Tabs>\r\n          </AppBar>\r\n          \r\n          <div>\r\n          {\r\n                this.state.valueCat === 0 && \r\n                <TabContainer>\r\n                  <div style={{width: '96%'}}>\r\n                  <Card>\r\n                    <CardHeader\r\n                      title=\"Overview Eastern Region\"\r\n                      subheader=\"Year Information 2561 - 2562\"\r\n                    />\r\n                  <div class=\"zoom\"  style={{display: 'flex', justifyContent: 'space-around', margin: 'auto' }}>\r\n                    {\r\n                      this.state.valueGDP === 0 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"GeoChart\"\r\n                          data={[['Province', 'Population'], \r\n                                ['Chon Buri',     1535445],\t\r\n                                ['Rayong',         723316],\t\r\n                                ['Chanthaburi',    536496],\t\r\n                                ['Trat',           229914]]}\r\n                          options={{\r\n                            region:'TH',\r\n                            resolution:'provinces',\r\n                            colorAxis: { colors: ['#C9E4CA', '#87BBA2', '#55828B', '#3B6064', '#364958'] },\r\n                            backgroundColor: '#88d2ff',\r\n                            datalessRegionColor: '#ffffff',\r\n                            defaultColor: '#f5f5f5',\r\n                          }}\r\n                          mapsApiKey=\"AIzaSyCXU_3IGQ9ZlHDeJuOoGJXYjsjPCaBbcm8\"\r\n                          rootProps={{ 'data-testid': '4' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 1 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"GeoChart\"\r\n                          data={[['Province', 'AllBudget'], \r\n                                ['Chon Buri',     23970120494],\t\r\n                                ['Rayong',         8014286544],\t\r\n                                ['Chanthaburi',    6253304134],\t\r\n                                ['Trat',           2828784744]]}\r\n                          options={{\r\n                            region:'TH',\r\n                            resolution:'provinces',\r\n                            colorAxis: { colors: ['#C9E4CA', '#87BBA2', '#55828B', '#3B6064', '#364958'] },\r\n                            backgroundColor: '#88d2ff',\r\n                            datalessRegionColor: '#ffffff',\r\n                            defaultColor: '#f5f5f5',\r\n                          }}\r\n                          mapsApiKey=\"AIzaSyCXU_3IGQ9ZlHDeJuOoGJXYjsjPCaBbcm8\"\r\n                          rootProps={{ 'data-testid': '4' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 2 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"GeoChart\"\r\n                          data={[['Province', 'MAC Budget'], \r\n                                ['Chon Buri',   1348902100],\t\r\n                                ['Rayong',       574015000],\t\r\n                                ['Chanthaburi', 1734170800],\t\r\n                                ['Trat',         543389400]]}\r\n                          options={{\r\n                            region:'TH',\r\n                            resolution:'provinces',\r\n                            colorAxis: { colors: ['#C9E4CA', '#87BBA2', '#55828B', '#3B6064', '#364958'] },\r\n                            backgroundColor: '#88d2ff',\r\n                            datalessRegionColor: '#ffffff',\r\n                            defaultColor: '#f5f5f5',\r\n                          }}\r\n                          mapsApiKey=\"AIzaSyCXU_3IGQ9ZlHDeJuOoGJXYjsjPCaBbcm8\"\r\n                          rootProps={{ 'data-testid': '4' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                  </div>\r\n                  <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                      value={this.state.valueGDP}\r\n                      onChange={this.handleChangeGDP}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                      style={{display: 'flex', margin: 'auto'}}\r\n                    >\r\n                      <Tab label=\"ประชากร\" />\r\n                      <Tab label=\"งบประมาณจังหวัด\" />\r\n                      <Tab label=\"งบประมาณกระทรวงเกษตรและสหกรณ์\" />\r\n                    </Tabs>\r\n                  </AppBar>\r\n                  </Card>\r\n                  \r\n                  </div>\r\n                </TabContainer>\r\n              }\r\n              {\r\n                this.state.valueCat === 1 && \r\n                <TabContainer>\r\n                  <div style={{width: '96%'}}>\r\n                  <Card>\r\n                    <CardHeader\r\n                      title=\"Budget Variation Rate and Trendline\"\r\n                      subheader=\"Shows all budget of each country in 2547 - 2562\"\r\n                    />\r\n                  <div style={{display: 'flex', justifyContent: 'space-around', margin: 'auto'}}>\r\n                    {\r\n                      this.state.valueGDP === 0 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"LineChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'Budget'],\r\n                            [2547,147.880473],\r\n                            [2548,169.898087],\r\n                            [2549,263.863673],\r\n                            [2550,418.245615],\r\n                            [2551,384.96894],\r\n                            [2552,172.82059],\r\n                            [2553,473.3295],\r\n                            [2554,1212.111538],\r\n                            [2555,2373.592334],\r\n                            [2556,10520.593054],\r\n                            [2557,1205.452833],\r\n                            [2558,750.505423],\r\n                            [2559,572.0142],\r\n                            [2560,631.3966],\r\n                            [2561,1417.0282],\r\n                            [2562,1348.9021]\r\n                          ]}\r\n                          options={{\r\n                            hAxis: {\r\n                              title: 'Year',\r\n                              gridlines : {\r\n                                count : 8\r\n                              }\r\n                            },\r\n                            vAxis: {\r\n                              title: 'Budget (Million Baht)',\r\n                            },\r\n                            series: {\r\n                              1: { curveType: 'function' },\r\n                            },\r\n                            explorer: {\r\n                              actions: ['dragToZoom', 'rightClickToReset'] \r\n                            },\r\n                            trendlines: {\r\n                              0: {\r\n                                type: 'exponential',\r\n                                visibleInLegend: true,\r\n                                color: 'green'\r\n                              }\r\n                            }\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 1 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"LineChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'Budget'],\r\n                            [2547,179.746356],\r\n                            [2548,263.620717],\r\n                            [2549,191.971794],\r\n                            [2550,755.304377],\r\n                            [2551,1037.951132],\r\n                            [2552,696.334408],\r\n                            [2553,491.465457],\r\n                            [2554,533.679994],\r\n                            [2555,259.682095],\r\n                            [2556,181.257454],\r\n                            [2557,170.764123],\r\n                            [2558,347.882511],\r\n                            [2559,565.8767],\r\n                            [2560,835.56011],\r\n                            [2561,1075.2048],\r\n                            [2562,574.015]\r\n                          ]}\r\n                          options={{\r\n                            hAxis: {\r\n                              title: 'Year',\r\n                              gridlines : {\r\n                                count : 8\r\n                              }\r\n                            },\r\n                            vAxis: {\r\n                              title: 'Budget (Million Baht)',\r\n                            },\r\n                            series: {\r\n                              1: { curveType: 'function' },\r\n                            },\r\n                            explorer: {\r\n                              actions: ['dragToZoom', 'rightClickToReset'] \r\n                            },\r\n                            trendlines: {\r\n                              0: {\r\n                                type: 'exponential',\r\n                                visibleInLegend: true,\r\n                                color: 'green'\r\n                              }\r\n                            }\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 2 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"LineChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'Budget'],\r\n                            [2547,152.145509],\r\n                            [2548,185.228819],\r\n                            [2549,210.426275],\r\n                            [2550,259.519332],\r\n                            [2551,308.408961],\r\n                            [2552,335.7463],\r\n                            [2553,241.746962],\r\n                            [2554,994.382445],\r\n                            [2555,2787.440897],\r\n                            [2556,1596.719613],\r\n                            [2557,1696.189523],\r\n                            [2558,802.258751],\r\n                            [2559,1132.86044],\r\n                            [2560,956.0565],\r\n                            [2561,1509.4408],\r\n                            [2562,1734.1708]\r\n                          ]}\r\n                          options={{\r\n                            hAxis: {\r\n                              title: 'Year',\r\n                              gridlines : {\r\n                                count : 8\r\n                              }\r\n                            },\r\n                            vAxis: {\r\n                              title: 'Budget (Million Baht)',\r\n                            },\r\n                            series: {\r\n                              1: { curveType: 'function' },\r\n                            },\r\n                            explorer: {\r\n                              actions: ['dragToZoom', 'rightClickToReset'] \r\n                            },\r\n                            trendlines: {\r\n                              0: {\r\n                                type: 'exponential',\r\n                                visibleInLegend: true,\r\n                                color: 'green'\r\n                              }\r\n                            }\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 3 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"LineChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'Budget'],\r\n                            [2547,140.489245],\r\n                            [2548,152.876356],\r\n                            [2549,225.10545],\r\n                            [2550,325.981056],\r\n                            [2551,246.307501],\r\n                            [2552,322.617884],\r\n                            [2553,240.09431],\r\n                            [2554,351.57008],\r\n                            [2555,165.842496],\r\n                            [2556,151.886439],\r\n                            [2557,219.011843],\r\n                            [2558,255.22356],\r\n                            [2559,210.00324],\r\n                            [2560,231.2664],\r\n                            [2561,325.144],\r\n                            [2562,543.3894]\r\n                          ]}\r\n                          options={{\r\n                            hAxis: {\r\n                              title: 'Year',\r\n                              gridlines : {\r\n                                count : 8\r\n                              }\r\n                            },\r\n                            vAxis: {\r\n                              title: 'Budget (Million Baht)',\r\n                            },\r\n                            series: {\r\n                              1: { curveType: 'function' },\r\n                            },\r\n                            explorer: {\r\n                              actions: ['dragToZoom', 'rightClickToReset'] \r\n                            },\r\n                            trendlines: {\r\n                              0: {\r\n                                type: 'exponential',\r\n                                visibleInLegend: true,\r\n                                color: 'green'\r\n                              }\r\n                            }\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                  </div>\r\n                  <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                      value={this.state.valueGDP}\r\n                      onChange={this.handleChangeGDP}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                      style={{display: 'flex', margin: 'auto'}}\r\n                    >\r\n                      <Tab label=\"Chonburi\" />\r\n                      <Tab label=\"Rayong\" />\r\n                      <Tab label=\"Chanthaburi\" />\r\n                      <Tab label=\"Trat\" />\r\n                    </Tabs>\r\n                  </AppBar>\r\n                  </Card>\r\n                  \r\n                  </div>\r\n                </TabContainer>\r\n              }  \r\n              {\r\n                this.state.valueCat === 2 && \r\n                <TabContainer>\r\n                  <div style={{width: '96%'}}>\r\n                  <Card>\r\n                    <CardHeader\r\n                      title=\"Distribution ratio of Department in Ministry of Agriculture\"\r\n                      subheader=\"Shows distribution of budget in each department w/o Royal Irrigation Department\"\r\n                    />\r\n                  <div style={{display: 'flex', justifyContent: 'space-around', margin: 'auto'}}>\r\n                    {\r\n                      this.state.valueGDP === 0 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"PieChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Department', 'Budget Ratio'],\r\n                            ['สํานักงานปลัดกระทรวงเกษตรและสหกรณ์', 147200],\r\n                            ['กรมประมง', 6449800],\r\n                            ['กรมปศุสัตว์', 14973000],\r\n                            ['กรมพัฒนาที่ดิน', 17409000],\r\n                            ['กรมส่งเสริมการเกษตร',303000],\r\n                            ['กรมส่งเสริมสหกรณ์',93300],\r\n                            ['สํานักงานการปฏิรูปที่ดินเพื่อเกษตรกรรม',1635800]\r\n                          ]}\r\n                          options={{\r\n                            title: 'Budget Ratio in each deaprtment of Chonburi',\r\n                          }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 1 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"PieChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Department', 'Budget Ratio'],\r\n                            ['สํานักงานปลัดกระทรวงเกษตรและสหกรณ์', 15800],\r\n                            ['กรมประมง', 3551300],\r\n                            ['กรมปศุสัตว์', 1857000],\r\n                            ['กรมพัฒนาที่ดิน', 11493000],\r\n                            ['กรมส่งเสริมการเกษตร',2318900],\r\n                            ['กรมส่งเสริมสหกรณ์',220800],\r\n                            ['สํานักงานการปฏิรูปที่ดินเพื่อเกษตรกรรม',73600]\r\n                          ]}\r\n                          options={{\r\n                            title: 'Budget Ratio in each deaprtment of Rayong',\r\n                          }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 2 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"PieChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Department', 'Budget Ratio'],\r\n                            ['สํานักงานปลัดกระทรวงเกษตรและสหกรณ์', 1526000],\r\n                            ['กรมประมง', 2984400],\r\n                            ['กรมปศุสัตว์', 1805900],\r\n                            ['กรมพัฒนาที่ดิน', 49488000],\r\n                            ['กรมส่งเสริมการเกษตร',2759300],\r\n                            ['กรมส่งเสริมสหกรณ์',2506800],\r\n                            ['สํานักงานการปฏิรูปที่ดินเพื่อเกษตรกรรม',36800]\r\n                          ]}\r\n                          options={{\r\n                            title: 'Budget Ratio in each deaprtment of Chanthaburi',\r\n                          }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 3 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"PieChart\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Department', 'Budget Ratio'],\r\n                            ['สํานักงานปลัดกระทรวงเกษตรและสหกรณ์', 28600],\r\n                            ['กรมประมง', 210000],\r\n                            ['กรมปศุสัตว์', 1124000],\r\n                            ['กรมพัฒนาที่ดิน', 36811400],\r\n                            ['กรมส่งเสริมการเกษตร',508800],\r\n                            ['กรมส่งเสริมสหกรณ์',70400],\r\n                            ['สํานักงานการปฏิรูปที่ดินเพื่อเกษตรกรรม',36800]\r\n                          ]}\r\n                          options={{\r\n                            title: 'Budget Ratio in each deaprtment of Trat',\r\n                          }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                  </div>\r\n                  <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                      value={this.state.valueGDP}\r\n                      onChange={this.handleChangeGDP}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                      style={{display: 'flex', margin: 'auto'}}\r\n                    >\r\n                      <Tab label=\"Chonburi\" />\r\n                      <Tab label=\"Rayong\" />\r\n                      <Tab label=\"Chanthaburi\" />\r\n                      <Tab label=\"Trat\" />\r\n                    </Tabs>\r\n                  </AppBar>\r\n                  </Card>\r\n                  \r\n                  </div>\r\n                </TabContainer>\r\n              }  \r\n              {\r\n                this.state.valueCat === 3 && \r\n                <TabContainer>\r\n                  <div style={{width: '96%'}}>\r\n                  <Card>\r\n                    <CardHeader\r\n                      title=\"Main Department of MAC\"\r\n                      subheader=\"MAC - Ministry of Agriculture and Cooperatives\"\r\n                    />\r\n                  <div style={{display: 'flex', justifyContent: 'space-around', margin: 'auto'}}>\r\n                  {\r\n                      this.state.valueGDP === 0 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"Bar\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'Chonburi', 'Rayong', 'Chanthaburi','Trat'],\r\n                            ['2558',577458500,230306800,654480500,191292600],\r\n                            ['2559',467390200,442770100,1026334600,125626500],\r\n                            ['2560',582640300,794572800,894507900,203750200],\r\n                            ['2561',1321047600,999376200,1380748800,271496800],\r\n                            ['2562',1305509900,546407200,1665939000,503646400]\r\n                          ]}\r\n                          options={{\r\n                            chart: {\r\n                              title: 'Budget Allocation to Royal Irrigation Department',\r\n                              subtitle: 'Distribution of budget in 2558-2562',\r\n                            },\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 1 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"Bar\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'กรมประมง', 'กรมปศุสัตว์', 'กรมพัฒนาที่ดิน','กรมส่งเสริมการเกษตร'],\r\n                            ['2558',29468650,55409920,34571500,150000],\r\n                            ['2559',15007800,2008500,17504900,65193200],\r\n                            ['2560',11089500,9631500,17264400,431000],\r\n                            ['2561',1020600,9735200,6857200,11658000],\r\n                            ['2562',6449800,14973000,17409000,303000]\r\n                          ]}\r\n                          options={{\r\n                            chart: {\r\n                              title: 'Budget Allocation w/o Royal Irrigation Department',\r\n                              subtitle: 'Distribution of budget to Main Department in 2558-2562',\r\n                            },\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 2 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"Bar\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'กรมประมง', 'กรมปศุสัตว์', 'กรมพัฒนาที่ดิน','กรมส่งเสริมการเกษตร'],\r\n                            ['2558',48439745,11305752,17169575,500000],\r\n                            ['2559',17947900,65000,12708900,66221900],\r\n                            ['2560',17379500,1815000,6564000,1707000],\r\n                            ['2561',4670600,2137500,16004000,11816000],\r\n                            ['2562',3551300,1857000,11493000,2318900]\r\n                          ]}\r\n                          options={{\r\n                            chart: {\r\n                              title: 'Budget Allocation w/o Royal Irrigation Department',\r\n                              subtitle: 'Distribution of budget to Main Department in 2558-2562',\r\n                            },\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 3 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"Bar\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'กรมประมง', 'กรมปศุสัตว์', 'กรมพัฒนาที่ดิน','กรมส่งเสริมการเกษตร'],\r\n                            ['2558',41078090,21335000,28256000,0],\r\n                            ['2559',13408300,2577800,22970040,48696900],\r\n                            ['2560',6327000,808100,39331500,3137800],\r\n                            ['2561',3536200,5771400,27177000,4730100],\r\n                            ['2562',2984400,1805900,49488000,2759300]\r\n                          ]}\r\n                          options={{\r\n                            chart: {\r\n                              title: 'Budget Allocation w/o Royal Irrigation Department',\r\n                              subtitle: 'Distribution of budget to Main Department in 2558-2562',\r\n                            },\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                    {\r\n                      this.state.valueGDP === 4 && <TabContainer>\r\n                        <Chart\r\n                          width={'645px'}\r\n                          height={'375px'}\r\n                          chartType=\"Bar\"\r\n                          loader={<div>Loading Chart</div>}\r\n                          data={[\r\n                            ['Year', 'กรมประมง', 'กรมปศุสัตว์', 'กรมพัฒนาที่ดิน','กรมส่งเสริมการเกษตร'],\r\n                            ['2558',19388770,7056530,16769100,171200],\r\n                            ['2559',12258100,16505000,20255640,33798700],\r\n                            ['2560',2356000,1928600,17189700,844600],\r\n                            ['2561',13956800,1017000,30331000,1104500],\r\n                            ['2562',210000,1124000,36811400,508800]\r\n                          ]}\r\n                          options={{\r\n                            chart: {\r\n                              title: 'Budget Allocation w/o Royal Irrigation Department',\r\n                              subtitle: 'Distribution of budget to Main Department in 2558-2562',\r\n                            },\r\n                          }}\r\n                          rootProps={{ 'data-testid': '2' }}\r\n                        />\r\n                      </TabContainer>\r\n                    }\r\n                  </div>\r\n                  <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                      value={this.state.valueGDP}\r\n                      onChange={this.handleChangeGDP}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                      style={{display: 'flex', margin: 'auto'}}\r\n                    >\r\n                      <Tab label=\"กรมชลประทาน\" />\r\n                      <Tab label=\"Chonburi\" />\r\n                      <Tab label=\"Rayong\" />\r\n                      <Tab label=\"Chanthaburi\" />\r\n                      <Tab label=\"Trat\" />\r\n                    </Tabs>\r\n                  </AppBar>\r\n                  </Card>\r\n                  \r\n                  </div>\r\n                </TabContainer>\r\n              }\r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}